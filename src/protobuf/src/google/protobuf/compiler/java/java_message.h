// protocol buffers - google's data interchange format
// copyright 2008 google inc.  all rights reserved.
// http://code.google.com/p/protobuf/
//
// redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * neither the name of google inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// this software is provided by the copyright holders and contributors
// "as is" and any express or implied warranties, including, but not
// limited to, the implied warranties of merchantability and fitness for
// a particular purpose are disclaimed. in no event shall the copyright
// owner or contributors be liable for any direct, indirect, incidental,
// special, exemplary, or consequential damages (including, but not
// limited to, procurement of substitute goods or services; loss of use,
// data, or profits; or business interruption) however caused and on any
// theory of liability, whether in contract, strict liability, or tort
// (including negligence or otherwise) arising in any way out of the use
// of this software, even if advised of the possibility of such damage.

// author: kenton@google.com (kenton varda)
//  based on original protocol buffers design by
//  sanjay ghemawat, jeff dean, and others.

#ifndef google_protobuf_compiler_java_message_h__
#define google_protobuf_compiler_java_message_h__

#include <string>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/compiler/java/java_field.h>

namespace google {
namespace protobuf {
  namespace io {
    class printer;             // printer.h
  }
}

namespace protobuf {
namespace compiler {
namespace java {

class messagegenerator {
 public:
  explicit messagegenerator(const descriptor* descriptor);
  ~messagegenerator();

  // all static variables have to be declared at the top-level of the file
  // so that we can control initialization order, which is important for
  // descriptorproto bootstrapping to work.
  void generatestaticvariables(io::printer* printer);

  // output code which initializes the static variables generated by
  // generatestaticvariables().
  void generatestaticvariableinitializers(io::printer* printer);

  // generate the class itself.
  void generate(io::printer* printer);

  // generates the base interface that both the class and its builder implement
  void generateinterface(io::printer* printer);

  // generate code to register all contained extensions with an
  // extensionregistry.
  void generateextensionregistrationcode(io::printer* printer);

 private:
  enum usememoization {
    memoize,
    dont_memoize
  };

  void generatemessageserializationmethods(io::printer* printer);
  void generateparsefrommethods(io::printer* printer);
  void generateserializeonefield(io::printer* printer,
                                 const fielddescriptor* field);
  void generateserializeoneextensionrange(
      io::printer* printer, const descriptor::extensionrange* range);

  void generatebuilder(io::printer* printer);
  void generatecommonbuildermethods(io::printer* printer);
  void generatedescriptormethods(io::printer* printer);
  void generatebuilderparsingmethods(io::printer* printer);
  void generateisinitialized(io::printer* printer,
      usememoization usememoization);
  void generateequalsandhashcode(io::printer* printer);

  void generateparser(io::printer* printer);
  void generateparsingconstructor(io::printer* printer);

  const descriptor* descriptor_;
  fieldgeneratormap field_generators_;

  google_disallow_evil_constructors(messagegenerator);
};

}  // namespace java
}  // namespace compiler
}  // namespace protobuf

}  // namespace google
#endif  // google_protobuf_compiler_java_message_h__
